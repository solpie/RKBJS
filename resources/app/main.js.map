{"version":3,"sources":["webpack:///webpack/bootstrap 58145e344a8118c4aa7c?43b5","webpack:///./src/main.ts","webpack:///external \"electron\"","webpack:///external \"child_process\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,iBAAiB;AAC7C,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,EAAC;;;;;;;;;AC7ED,sC;;;;;;;ACAA,2C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 58145e344a8118c4aa7c","var _a = require('electron'), app = _a.app, BrowserWindow = _a.BrowserWindow, ipcMain = _a.ipcMain;\r\nvar win;\r\nfunction onReady() {\r\n    openWin();\r\n}\r\nvar spawn = require('child_process').spawn;\r\nvar watchView;\r\nvar watchServer;\r\nvar isWatch = false;\r\nvar sender;\r\nfunction devWatch() {\r\n    if (isWatch) {\r\n        return;\r\n    }\r\n    isWatch = true;\r\n    function sendServer(data) {\r\n        sender.send('logServer', data);\r\n    }\r\n    function sendView(data) {\r\n        sender.send('logView', data);\r\n    }\r\n    watchView = spawn('npm.cmd', ['run', 'view'], {\r\n        detached: false,\r\n        stdio: ['ignore']\r\n    });\r\n    watchView.stdout.on('data', sendView);\r\n    watchView.stderr.on('data', sendView);\r\n    watchView.on('close', sendView);\r\n    watchServer = spawn('npm.cmd', ['run', 'server'], {\r\n        detached: false\r\n    });\r\n    watchServer.stdout.on('data', sendServer);\r\n    watchServer.stderr.on('data', sendServer);\r\n    watchServer.on('close', sendServer);\r\n}\r\nfunction killWatch() {\r\n    if (watchView) {\r\n        watchView.kill('SIGKILL');\r\n    }\r\n    if (watchServer) {\r\n        watchServer.kill('SIGKILL');\r\n    }\r\n}\r\nvar isDev = /[\\\\/]electron-prebuilt[\\\\/]/.test(process.execPath);\r\nfunction openWin(serverConf) {\r\n    ipcMain.on('open-devtool', function (event, status) {\r\n        win.toggleDevTools({ mode: 'detach' });\r\n    });\r\n    ipcMain.on('devWatch', function (event, arg) {\r\n        sender = event.sender;\r\n        devWatch();\r\n    });\r\n    win = new BrowserWindow({\r\n        width: 500, height: 540,\r\n        resizable: false,\r\n        frame: true,\r\n        autoHideMenuBar: false,\r\n        webaudio: false\r\n    });\r\n    win.setMenuBarVisibility(false);\r\n    win.loadURL(\"file://\" + __dirname + \"resources/app/index.html\");\r\n    win.toggleDevTools({ mode: 'detach' });\r\n    win.on('closed', function () {\r\n        win = null;\r\n    });\r\n}\r\napp.on('ready', onReady);\r\napp.on('window-all-closed', function () {\r\n    console.log('window-all-closed');\r\n    killWatch();\r\n    if (process.platform !== 'darwin') {\r\n        app.quit();\r\n    }\r\n});\r\napp.on('activate', function () {\r\n    if (win === null) {\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.ts\n// module id = 0\n// module chunks = 1","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = 15\n// module chunks = 1","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 16\n// module chunks = 1"],"sourceRoot":""}